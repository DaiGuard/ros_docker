FROM nvidia/cuda:11.7.1-cudnn8-devel-ubuntu20.04

ARG user=ros
ARG uid=1000
ARG gid=1000

ENV DEBIAN_FRONTEND=noninteractive

# 必要パッケージのインストール
RUN apt-get update && \
    apt-get install -y \
    apt-utils nano iputils-ping net-tools dnsutils rsync bash-completion expect git cmake wget unzip \
        build-essential pkg-config qtbase5-dev qtdeclarative5-dev freeglut3 freeglut3-dev libtbb-dev \
        libjpeg8-dev libpng-dev libtiff5-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
        libxvidcore-dev libx264-dev libgtk-3-dev libatlas-base-dev gfortran \
        libgstreamer1.0-dev libgstreamer-plugins-bad1.0-dev libeigen3-dev libatlas3-base libatlas-base-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*    

# GPU対応のOpenCVインストール
RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/refs/tags/4.6.0.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/refs/tags/4.6.0.zip && \
    unzip opencv.zip && \
    unzip opencv_contrib.zip && \
    mkdir -p opencv-4.6.0/build && \
    cd opencv-4.6.0/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \        
        -D INSTALL_C_EXAMPLES=ON \
        -D INSTALL_PYTHON_EXAMPLES=ON \
        -D INSTALL_TESTS=ON \
        -D WITH_PYTHON=ON \
        -D BUILD_opencv_python2=OFF \
        -D BUILD_opencv_python3=ON \
        -D PYTHON_DEFAULT_EXECUTABLE=python3 \
        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.6.0/modules \
        -D WITH_MKL=ON \
        -D WITH_CUDA=ON \
        -D CUDA_FAST_MATH=ON \
        -D WITH_CUBLAS=ON \
        -D WITH_CUDNN=ON \
        -D WITH_NVCUVID=OFF \
        -D OPENCV_DNN_CUDA=ON \
        -D BUILD_opencv_cudaimgproc=ON \
        -D BUILD_EXAMPLES=ON \
        -D WITH_TBB=ON \
        -D WITH_V4L=ON \
        -D WITH_QT=ON \
        -D WITH_OPENGL=ON .. && \
    make -j${nproc} && \
    make install && \
    /bin/bash -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf' && \
    ldconfig

# # ローカルユーザーフォルダを作成
# RUN groupadd -g $gid $user && \
#     useradd -m $user -b /home -u $uid -g $gid && \
#     echo "${user}   ALL=(ALL)   NOPASSWD:   ALL" >> /etc/sudoers.d/$user && \
#     chmod 0440 /etc/sudoers.d/$user

# # ワークディレクトリを作成と設定
# WORKDIR /home/$user

# # ローカル環境設定
# RUN echo "source /opt/ros/foxy/setup.bash" >> /home/$user/.bashrc


# GPUの有効化
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all

# # エントリーポイント
# ENTRYPOINT [ "/ros_entrypoint.sh" ]

# コマンド
CMD [ "/bin/bash" ]